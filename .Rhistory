shiny::runApp()
shiny::runApp()
runApp()
runApp()
interpolate_melt_data <- function(data) {
data <- select(data, -c("entry_flag"))
data$time <- floor(character_to_computer_time(data$time) / 3600000) * 3600000
time_seq <- data.frame(cbind(time=seq(character_to_computer_time(current_starting_day(), format="%Y-%m-%d %H:%M:%S"), character_to_computer_time(current_ending_day(), format="%Y-%m-%d %H:%M:%S") + 86400000, get_time_gap("hour"))))
data <- left_join(time_seq, data, by=c("time" = "time"))
data[is.na(data)] <- 0
data$time <- character_time_to_posixct(computer_time_to_character(data$time))
data <- melt(data, id.vars=c("time"))
data$variable <- as.character(data$variable)
return(data)
}
runApp()
runApp()
runApp()
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
runApp('RBBapp.R')
library(shiny); runApp('RBBapp.R')
runApp('RBBapp.R')
library(shiny); runApp('RBBapp.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
### App
shinyApp(ui = ui, server = server)
### UI Definition
ui <- fluidPage(
titlePanel("RBB Experiment Portal"),
sidebarLayout(
sidebarPanel(
uiOutput("experiment_select"),
uiOutput("cohort_select"),
uiOutput("rat_select"),
uiOutput("day_select")
),
mainPanel(
tabsetPanel(
type = "tabs",
tabPanel("Digital Raw Data", DT::dataTableOutput('tbl_raw')),
tabPanel("Digital Clean Data", DT::dataTableOutput('tbl_clean')),
tabPanel("Minute Binned Data", DT::dataTableOutput('tbl_minute')),
tabPanel("Hour Binned Data", DT::dataTableOutput('tbl_hour'))
)
)
),
div("Version: V.1.0.0", align = "center")
)
runApp('OG.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('RBBappV3.R')
runApp('NewRBB_APP.R')
library(shiny); runApp('NewRBB_APP.R')
